name: Build and Push Multi-Arch Docker Image

on:
  push:
    branches:
      - main
    tags:
      - v*  # 匹配以 "v" 开头的标签
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME || 'jxqg597/sublinkx' }}  # 可配置的镜像名称
  DOCKER_PLATFORMS: linux/amd64,linux/arm64  # 目标平台

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 QEMU 以支持跨架构构建
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 登录到 Docker Hub（仅在 push 事件时登录）
      - name: Log in to Docker Hub
        if: github.event_name == 'push'  # 只有 push 事件时登录
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 设置动态标签
      - name: Set Docker Image Tag
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "DOCKER_IMAGE_TAG=pr-${{ github.event.number }}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "push" ]; then
            if [[ "${{ github.ref }}" == refs/tags/* ]]; then
              echo "DOCKER_IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV  # 使用 Git 标签
            else
              echo "DOCKER_IMAGE_TAG=latest" >> $GITHUB_ENV  # 默认使用 latest
            fi
          fi

      # 构建镜像
      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ env.DOCKER_PLATFORMS }}
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
            ${{ env.DOCKER_IMAGE_NAME }}:latest
          load: ${{ github.event_name != 'push' }}  # 仅在非 push 事件时加载到本地
          push: ${{ github.event_name == 'push' }}  # 仅在 push 事件时推送
          cache-from: type=gha  # 使用 GitHub Actions 缓存
          cache-to: type=gha,mode=max  # 缓存 Docker 层以加快构建速度
